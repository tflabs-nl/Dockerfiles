server {
  listen 80 default_server;
  #listen 443 ssl http2;
  
  #ssl_certificate /etc/nginx/ssl/fullchain.pem;
  #ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  
  gzip on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  
  set_real_ip_from  10.0.0.0/8;
  set_real_ip_from  172.16.0.0/12;
  set_real_ip_from  192.168.0.0/16;
  real_ip_header    X-Forwarded-For;

  index index.php index.html;
  error_log  /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;
  root /var/www/public;

  # removes trailing slashes (prevents SEO duplicate content issues)
  if (!-d $request_filename)
  {
		rewrite ^/(.+)/$ /$1 permanent;
  }

  # enforce NO www
  if ($host ~* ^www\.(.*))
  {
		set $host_without_www $1;
		rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
  }

  # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
  if (!-e $request_filename)
  {
		rewrite ^/(.*)$ /index.php?/$1 last;
		break;
  }

  location / {
	  try_files $uri $uri/ /index.php?$query_string @extensionless-php;
  }

location ~ \.php$ {
  #fastcgi_cache phpcache;
  #fastcgi_cache_valid 200 30m;
  #fastcgi_cache_methods GET HEAD;
  #add_header X-Fastcgi-Cache $upstream_cache_status;

  try_files $uri =404;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;
  fastcgi_pass unix:/run/php/php8.0-fpm.sock;
  fastcgi_index index.php;
  include fastcgi_params;
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  fastcgi_param PATH_INFO $fastcgi_path_info;
}
	
location @extensionless-php {
rewrite ^(.*)$ $1.php last;
}

# Redirect all traffic in /.well-known/ to letsencrypt
#    location ^~ /.well-known/acme-challenge/ {
#      proxy_pass http://certbot;
#    }
}